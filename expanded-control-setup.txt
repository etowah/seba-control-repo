#
# Control Repo host steps
#


#
# BUILD control repo vm.  Done with internet connectivity then qcow and tgz packaged
# 

# install docker repo
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
sudo apt update
sudo apt install docker-ce=17.03.3~ce-0~ubuntu-xenial
sudo systemctl start docker

# install apache to host helm and oar repo
sudo apt install apache2
sudo mkdir /var/www/html/charts
sudo mkdir /var/www/html/oar
sudo systemctl start apache2

# install nfs server... might not be needed
#sudo apt install nfs-kernel-server
#sudo vi /etc/exports 
#sudo systemctl start nfs-kernel-server.service

sudo apt install nfs-common

## Install current version of pip, needed to get current ansible
## get-pip.py to be included in tarball
## curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
sudo python ~/seba-control-repo/get-pip.py
sudo pip -V

## Install tagged version of kubespray 2.7.0
## kubespray tgz to be included in tarball
## curl https://codeload.github.com/kubernetes-incubator/kubespray/tar.gz/v2.7.0 -o kubespray-v2.7.0.tgz
cd ~/
tar -zxvf ~/seba-control-repo/kubespray-v2.7.0.tar.gz

## Install kubespray requirements.  gets ansible and installs in /usr/local
cd ~/kubespray-2.7.0/
sudo pip install -r requirements.txt

# install helm client
## wget https://storage.googleapis.com/kubernetes-helm/helm-v2.9.1-linux-amd64.tar.gz
cd ~/
tar -zxvf ~/seba-control-repo/helm-v2.9.1-linux-amd64.tar.gz
sudo cp linux-amd64/helm /usr/local/bin/

# allow non-root to run docker
sudo usermod -aG docker foundry

# install att-foundry-atlanta-ca.crt
sudo cp ~/seba-control-repo/att-foundry-atlanta-ca.crt /usr/local/share/ca-certificates/
sudo update-ca-certificates

# stage docker repo service
sudo cp ~/seba-control-repo/docker-repo.service /etc/systemd/system/
sudo mkdir -p /var/docker-persist/docker-registry/registry
sudo mkdir -p /var/docker-persist/docker-registry/certs

sudo systemctl daemon-reload
sudo systemctl restart docker
sudo systemctl start docker-repo
sleep 20
sudo systemctl stop docker-repo

# verify registry image loaded
docker images





#
# BUILD POD.  Done with no internet.
#

Ensure mgmt vm and dns ready.
cheat with repo.seba.local /etc/hosts entries

## Generate needed SSH keyed authentication
cd ~/
ssh-keygen -t rsa
## modify for 3 kube hosts xxx.xxx.xxx.xxx
cat ~/.ssh/id_rsa.pub | ssh foundry@xxx.xxx.xxx.xxx 'cat >> ~/.ssh/authorized_keys'

## Install seba-pod specific inventory and configuration
cd ~/kubespray-2.7.0/inventory/
cp -a ~/seba-control-repo/seba-pod ~/kubespray-2.7.0/inventory/
# modify 3 kube hosts in hosts.ini, replace 10.64.1.X with yours.
vi seba-pod/hosts.ini

## Run the install.  Takes about 5 minutes. STILL NEEDS INTERNET!
cd ~/kubespray-2.7.0/
ansible-playbook -i inventory/seba-pod/hosts.ini --become --become-user=root cluster.yml



#
# fill with helm charts from elsewhere.  build box that can run  helm/tiller
#

mkdir ~/helm-charts
cd ~/source/helm-charts
for i in $(ls -1); do echo $i; helm dep update $i; helm package $i; done
mv *.tgz ~/helm-charts/

cd xos-profiles/
for i in $(ls -1); do echo $i; helm dep update $i; helm package $i; done
mv *.tgz ~/helm-charts/

cd ../xos-services/
for i in $(ls -1); do echo $i; helm dep update $i; helm package $i; done
mv *.tgz ~/helm-charts/

cd ../xos-tools/
for i in $(ls -1); do echo $i; helm dep update $i; helm package $i; done
mv *.tgz ~/helm-charts/

cd ~/
tar -zcvf helm-charts.tgz helm-charts
cp helm-charts.tgz ~/seba-control-repo/
git add ...


# on control-repo host during deployment
cd ~/
tar -zxvf ~/seba-control-repo/helm-charts.tgz
cd /var/www/html/charts/
sudo cp /home/foundry/charts/* .
sudo helm repo index --url http://repo.seba.local/charts/ /var/www/html/charts/
# need to fix nem-monitoring after index.yaml generated
# nem-monitoring wont deploy anyway, skip



#
# fill with oar files from elsewhere.  build box that can run internet curl
#
cd ~/
mkdir oar
curl -L 'https://oss.sonatype.org/service/local/artifact/maven/redirect?r=snapshots&g=org.opencord&a=olt-app&v=2.1.0-SNAPSHOT&e=oar' -o oar/olt-app-2.1.0-SNAPSHOT.oar
curl -L 'https://oss.sonatype.org/service/local/artifact/maven/redirect?r=snapshots&g=org.opencord&a=sadis-app&v=2.2.0-SNAPSHOT&e=oar' -o oar/sadis-app-2.2.0-SNAPSHOT.oar
curl -L 'https://oss.sonatype.org/service/local/artifact/maven/redirect?r=snapshots&g=org.opencord&a=dhcpl2relay&v=1.5.0-SNAPSHOT&e=oar' -o oar/dhcpl2relay-1.5.0-SNAPSHOT.oar
curl -L 'https://oss.sonatype.org/service/local/artifact/maven/redirect?r=snapshots&g=org.opencord&a=aaa&v=1.8.0-SNAPSHOT&e=oar' -o oar/aaa-1.8.0-SNAPSHOT.oar
curl -L 'https://oss.sonatype.org/service/local/artifact/maven/redirect?r=snapshots&g=org.opencord&a=kafka&v=1.0.0-SNAPSHOT&e=oar' -o oar/kafka-1.0.0-SNAPSHOT.oar
tar -zcvf onos-oar.tgz oar
cp onos-oar.tgz ~/seba-control-repo/
git add ...


# on control-repo host during deployment
cd ~/
tar -zxvf ~/seba-control-repo/onos-oar.tgz
sudo cp ~/oar/* /var/www/html/oar/


## Generate pod CA key
## Generate pod docker-repo key
cp -a ~/seba-control-repo/seba-pod-ca ~/
cd ~/seba-pod-ca/

mkdir -p issued
mkdir -p ca/private
mkdir -p ca/newcerts
touch ca/index.txt
echo 00 > ca/serial

openssl req -config seba-pod-ca-selfsign.cnf -new -newkey rsa:4096 -nodes -keyout ca/private/ca.key -out ca/ca.csr
openssl ca -config seba-pod-ca-certauth.cnf -out ca/ca.crt -days 3650 -keyfile ca/private/ca.key -selfsign -extensions v3_ca -infiles ca/ca.csr
openssl req -config docker-repo.cnf -new -newkey rsa:4096 -nodes -keyout issued/docker-repo.key -out issued/docker-repo.csr
openssl ca -config seba-pod-ca-certauth.cnf -keyfile ca/private/ca.key -cert ca/ca.crt -policy policy_anything -days 3650 -in issued/docker-repo.csr -out issued/docker-repo.crt
openssl x509 -in issued/docker-repo.crt -text -noout


##  Install ca locally
sudo cp ~/seba-pod-ca/ca/ca.crt /usr/local/share/ca-certificates/seba-pod-ca.crt
sudo update-ca-certificates 
sudo systemctl restart docker


# Run Docker repo

sudo cp ~/seba-pod-ca/issued/docker-repo.key /var/docker-persist/docker-registry/certs
sudo cp ~/seba-pod-ca/issued/docker-repo.crt /var/docker-persist/docker-registry/certs

sudo systemctl start docker-repo


#
# on build box, gather images. 20GB
#
~/source/seba-control-repo/scripts/package-docker-images.sh ~/source/seba-control-repo/seba-imagelist.txt docker-images/
## tar and copy to usb drive


# on control-repo during deployment
# Fill docker repo with images
## Possibly via usb passthrough on host or nfs?
## sudo mount -t nfs -o proto=tcp,port=2049 somewhere:/storage/nfs /mnt
cd ~/seba-control-repo/
scripts/load-docker-images.sh /mnt/docker-images
scripts/populate-docker-repo.sh seba-imagelist.txt

