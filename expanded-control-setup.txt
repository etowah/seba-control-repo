#
# Control Repo host steps
#
# Assumes repo node is packaged up with needed software


# install docker repo
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
apt update
apt install docker-ce=17.03.3~ce-0~ubuntu-xenial
systemctl start docker

# install apache to host helm and oar repo
apt install apache2
mkdir /var/www/html/repo
mkdir /var/www/html/oar
systemctl start apache2

# install nfs server... might not be needed
apt install nfs-kernel-server
vi /etc/exports 
systemctl start nfs-kernel-server.service

## Install current version of pip, needed to get current ansible
## get-pip.py to be included in tarball
## curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
sudo python ~/seba-control-repo/get-pip.py
sudo pip -V

## Install tagged version of kubespray 2.7.0
## kubespray tgz to be included in tarball
## curl https://codeload.github.com/kubernetes-incubator/kubespray/tar.gz/v2.7.0 -o kubespray-v2.7.0.tgz
cd ~/
tar -zxvf ~/seba-control-repo/kubespray-v2.7.0.tar.gz

## Install kubespray requirements.  gets ansible and installs in /usr/local
cd ~/kubespray-2.7.0/
sudo pip install -r requirements.txt

# install helm client
## wget https://storage.googleapis.com/kubernetes-helm/helm-v2.9.1-linux-amd64.tar.gz
cd ~/
tar -zxvf helm-v2.9.1-linux-amd64.tar.gz
sudo cp linux-amd64/helm /usr/local/bin/

# allow non-root to run docker
sudo usermod -aG docker foundry

# install att-foundry-atlanta-ca.crt
sudo update-ca-certificates

# stage docker repo service
cp ~/seba-control-repo/docker-repo.service /etc/systemd/system/
mkdir -p /var/docker-persist/docker-registry/registry
mkdir -p /var/docker-persist/docker-registry/certs

systemctl daemon-reload
systemctl restart docker
systemctl stop docker-repo





#
# BUILD POD
#

Ensure mgmt vm and dns ready.
cheat with /etc/hosts entries

## Generate needed SSH keyed authentication
cd ~/
ssh-keygen -t rsa
## modify for 3 kube hosts xxx.xxx.xxx.xxx
cat ~/.ssh/id_rsa.pub | ssh foundry@xxx.xxx.xxx.xxx 'cat >> ~/.ssh/authorized_keys'

## Install seba-pod specific inventory and configuration
## Included in tarball
cd ~/kubespray-2.7.0/inventory/
tar -zxvf ~/seba-control-repo/seba-pod-kubespray-config.tgz
# modify 3 kube hosts in hosts.ini, replace 10.64.1.X with yours.
vi seba-pod/hosts.ini

## Run the install.  Takes about 5 minutes.
cd ~/kubespray-2.7.0/
ansible-playbook -i inventory/seba-pod/hosts.ini --become --become-user=root cluster.yml



#
# fill with helm charts from elsewhere.  build box that can run  helm/tiller
#

mkdir ~/repo-package
cd ~/source/helm-charts
for i in $(ls -1); do echo $i; helm dep update $i; helm package $i; done
mv *.tgz ~/repo-package/

cd xos-profiles/
for i in $(ls -1); do echo $i; helm dep update $i; helm package $i; done
mv *.tgz ~/repo-package/

cd ../xos-services/
for i in $(ls -1); do echo $i; helm dep update $i; helm package $i; done
mv *.tgz ~/repo-package/

cd ../xos-tools/
for i in $(ls -1); do echo $i; helm dep update $i; helm package $i; done
mv *.tgz ~/repo-package/

cd ~/
tar -zcvf repo-package.tgz repo-package
scp repo-package.tgz $build-artifacts

# on control-repo host
tar -zxvf repo-package.tgz
cd /var/www/html/repo/
sudo cp /home/foundry/repo-package/* .
sudo helm repo index --url http://10.64.1.181/repo/ /var/www/html/repo/
# need to fix nem-monitoring after index.yaml generated
# nem-monitoring wont deploy anyway, skip



#
# fill with oar files from elsewhere.  build box that can run internet curl
#
cd /var/www/html/oar/
curl -L 'https://oss.sonatype.org/service/local/artifact/maven/redirect?r=snapshots&g=org.opencord&a=olt-app&v=2.1.0-SNAPSHOT&e=oar' -o olt-app-2.1.0-SNAPSHOT.oar
curl -L 'https://oss.sonatype.org/service/local/artifact/maven/redirect?r=snapshots&g=org.opencord&a=sadis-app&v=2.2.0-SNAPSHOT&e=oar' -o sadis-app-2.2.0-SNAPSHOT.oar
curl -L 'https://oss.sonatype.org/service/local/artifact/maven/redirect?r=snapshots&g=org.opencord&a=dhcpl2relay&v=1.5.0-SNAPSHOT&e=oar' -o dhcpl2relay-1.5.0-SNAPSHOT.oar
curl -L 'https://oss.sonatype.org/service/local/artifact/maven/redirect?r=snapshots&g=org.opencord&a=aaa&v=1.8.0-SNAPSHOT&e=oar' -o aaa-1.8.0-SNAPSHOT.oar
curl -L 'https://oss.sonatype.org/service/local/artifact/maven/redirect?r=snapshots&g=org.opencord&a=kafka&v=1.0.0-SNAPSHOT&e=oar' -o kafka-1.0.0-SNAPSHOT.oar


Generate pod CA key
Generate pod docker-repo key


Install ca locally
sudo cp seba-pod-ca/ca/ca.crt /usr/local/share/ca-certificates/seba-pod-ca.crt
sudo update-ca-certificates 
sudo systemctl restart docker


Run Docker repo

cp ~/seba-pod-ca/issued/docker-repo.key /var/docker-persist/docker-registry/certs
cp ~/seba-pod-ca/issued/docker-repo.crt /var/docker-persist/docker-registry/certs

systemctl start docker-repo


Fill docker repo with images
# side load repo rather than pull
scripts/gather-images.sh seba-imagelist.txt



