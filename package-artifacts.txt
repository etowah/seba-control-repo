#
# Package artifacts needed to install offline pod
# Keep the tgz created here and save to external storage or laptop 
#

# Run from *internet connected build host*.  This host must already be running docker, k8s, and helm !!!!

# clone seba-control-repo
cd ~/source/
git clone https://github.com/etowah/seba-control-repo.git


#
# Gather needed deb packages and build an apt repository
#
sudo apt install dpkg-dev rng-tools dpkg-sig libterm-readkey-perl reprepro

mkdir -p ~/apt-download/
~/source/seba-control-repo/scripts/buildrepo.sh ~/seba-control-repo/apt-mirror-lists/ ~/apt-download/

# generate new gpg key.  if needed. TODO: check
gpg --gen-key
dpkg-sig --sign builder ~/apt-download/*.deb -p

mkdir -p ~/repo/conf
cd ~/repo

cat <<EOF > ~/repo/conf/distributions
Origin: repo.seba.local
Label: apt repository
Codename: xenial
Architectures: amd64
Components: stable
Description: docker/ubuntu package repo
SignWith: yes
Pull: xenial"
EOF

reprepro --ask-passphrase -Vb . includedeb xenial ~/apt-download/*.deb
gpg --armor --export sebapodadmin@att.com --output > ~/repo/key

#### GET PUBLIC KEY FINGERPRINT AND ADD TO kubespray-2.7.0/roles/docker/vars/ubuntu-amd64.yml during setup-control-repo step
# should only have to do once if youve already created a private/public gpg key
gpg --with-fingerprint ~/repo/key |grep fingerprint|cut -d'=' -f2| tr -d '[:space:]' > ~/repo/fingerprint

cd ~/
tar -zcvf apt-repo.tgz repo
## copy to usb drive directly


#
# Gather needed packages for kubespray k8s install
#
cd ~/
mkdir -p k8s
curl -L "https://storage.googleapis.com/kubernetes-release/release/v1.11.3/bin/linux/amd64/kubeadm" -o k8s/kubeadm
curl -L "https://releases.hashicorp.com/vault/0.10.1/vault_0.10.1_linux_amd64.zip" -o k8s/vault_0.10.1_linux_amd64.zip
curl -L "https://github.com/coreos/etcd/releases/download/v3.2.18/etcd-v3.2.18-linux-amd64.tar.gz" -o k8s/etcd-v3.2.18-linux-amd64.tar.gz
curl -L "https://storage.googleapis.com/kubernetes-release/release/v1.11.3/bin/linux/amd64/hyperkube" -o k8s/hyperkube
tar -zcvf k8s-files.tgz k8s
## copy to usb drive directly


#
# Pull and gather docker images on build box. 20GB
#
# Assumes you have a large enough docker-images storage location. 
cd ~/
mkdir -p ~/docker-images
~/source/seba-control-repo/scripts/package-docker-images.sh ~/source/seba-control-repo/seba-imagelist.txt ~/docker-images/
~/source/seba-control-repo/scripts/package-docker-images.sh ~/source/seba-control-repo/kubespray-imagelist.txt ~/docker-images/
tar -cvf docker-images.tar docker-images
# too big to check-in
## copy to usb drive directly


#
# Generate helm charts.  build box that can run  helm/tiller
#

mkdir ~/charts

# get outside dependencies
helm fetch stable/etcd-operator
helm fetch incubator/kafka

# generate our own charts
cd ~/source/helm-charts
for i in $(ls -1); do echo $i; helm dep update $i; helm package $i; done
mv *.tgz ~/charts/

cd xos-profiles/
for i in $(ls -1); do echo $i; helm dep update $i; helm package $i; done
mv *.tgz ~/charts/

cd ../xos-services/
for i in $(ls -1); do echo $i; helm dep update $i; helm package $i; done
mv *.tgz ~/charts/

cd ../xos-tools/
for i in $(ls -1); do echo $i; helm dep update $i; helm package $i; done
mv *.tgz ~/charts/

cd ~/
tar -zcvf helm-charts.tgz charts
cp helm-charts.tgz ~/seba-control-repo/
git add helm-charts.tgz
## copy to usb drive directly


#
# Download oar files.  build box that can run internet curl
#
cd ~/
mkdir oar
curl -L 'https://oss.sonatype.org/service/local/artifact/maven/redirect?r=snapshots&g=org.opencord&a=olt-app&v=2.1.0-SNAPSHOT&e=oar' -o oar/olt-app-2.1.0-SNAPSHOT.oar
curl -L 'https://oss.sonatype.org/service/local/artifact/maven/redirect?r=snapshots&g=org.opencord&a=sadis-app&v=2.2.0-SNAPSHOT&e=oar' -o oar/sadis-app-2.2.0-SNAPSHOT.oar
curl -L 'https://oss.sonatype.org/service/local/artifact/maven/redirect?r=snapshots&g=org.opencord&a=dhcpl2relay&v=1.5.0-SNAPSHOT&e=oar' -o oar/dhcpl2relay-1.5.0-SNAPSHOT.oar
curl -L 'https://oss.sonatype.org/service/local/artifact/maven/redirect?r=snapshots&g=org.opencord&a=aaa&v=1.8.0-SNAPSHOT&e=oar' -o oar/aaa-1.8.0-SNAPSHOT.oar
curl -L 'https://oss.sonatype.org/service/local/artifact/maven/redirect?r=snapshots&g=org.opencord&a=kafka&v=1.0.0-SNAPSHOT&e=oar' -o oar/kafka-1.0.0-SNAPSHOT.oar
tar -zcvf onos-oar.tgz oar
cp onos-oar.tgz ~/seba-control-repo/
git add onos-oar.tgz
## copy to usb drive directly


# Take apt-repo.tgz, k8s-files.tgz, docker-images.tgz, helm-charts.tgz and onos-oar.tgz and copy to external storage or laptop for offline installation
# Take the seba-control-repo qcow file created earlier and package as well.
# At this point using the gathered artifacts we can physically install the pod and start/setup its control-repo vm.  See setup-control-repo.txt
