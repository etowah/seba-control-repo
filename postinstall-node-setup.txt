#
# Node setup post kubespray.  
#
# Installs helm packages and subsequent docker images
#

# Ensure mgmt vm and dns ready.
# add repo.seba.local to your POD's local dns server.
# cheat with repo.seba.local /etc/hosts entries

##
## Only on seba-node1.  TODO: figure out a way to run from control-repo.
##

# Run helm install
cd ~/
helm install -n cord-kafka stable/kafka --set persistence.enabled=false --set zookeeper.persistence.enabled=false -f att-seba-pod.yaml
helm install -n etcd-operator stable/etcd-operator -f att-seba-pod.yaml 
# wait for etcd-operator crd
helm install -n etcd-cluster stable/etcd-cluster -f att-seba-pod.yaml

# nem-monitoring fails.  chart bug. not included

helm install -n xos-core stable/xos-core -f att-seba-pod.yaml
helm install -n voltha stable/voltha -f att-seba-pod.yaml
# warning nginx-ingress-controller will fail.  its not used and can be ignored.

helm install -n onos stable/onos -f onos.yaml -f att-seba-pod.yaml
# wait for all to be running execpt nginx-ingress before proceeding

# THIS ASSUMES A WORKING POD DNS SERVER.  IF YOU ARENT RUNNING A DNS SERVER, modify att-seba-pod.yaml onos *AppUrl lines and replace with IP of control-repo vm:
helm install -n att-workflow stable/att-workflow -f att-seba-pod.yaml 
# check onos log for apps to load.  onos; log:tail; apps -s -a

# base-kubernetes fails. chart bug. not included

# inject radius server config into onos
scripts/quick-onos-update.sh seba-node1 radius-netcfg.json


# Should now be ready to use abstract-olt or manual yaml to provision pod OLT, whitelist, and subscriber.  TODO: add those commands below
