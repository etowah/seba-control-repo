#
# Node setup post kubespray.  
#
# Installs helm packages and subsequent docker images
#

# Ensure mgmt vm and dns ready.
# add repo.seba.local to your POD's local dns server.
# cheat with repo.seba.local /etc/hosts entries

##
## Only on seba-node1.  TODO: figure out a way to run from control-repo.
##

# Run helm install
cd ~/
helm install -n cord-kafka stable/kafka --set persistence.enabled=false --set zookeeper.persistence.enabled=false -f att-seba-pod.yaml
helm install -n etcd-operator stable/etcd-operator -f att-seba-pod.yaml 
# wait for etcd-operator crd
helm install -n etcd-cluster stable/etcd-cluster -f att-seba-pod.yaml

# nem-monitoring fails.  chart bug. not included

helm install -n xos-core stable/xos-core -f att-seba-pod.yaml
helm install -n voltha stable/voltha -f att-seba-pod.yaml
# warning nginx-ingress-controller will fail.  its not used and can be ignored.

helm install -n onos stable/onos -f onos.yaml -f att-seba-pod.yaml
# wait for all to be running execpt nginx-ingress before proceeding

# THIS ASSUMES A WORKING POD DNS SERVER.  IF YOU ARENT RUNNING A DNS SERVER, modify att-seba-pod.yaml onos *AppUrl lines and replace with IP of control-repo vm:
helm install -n att-workflow stable/att-workflow -f att-seba-pod.yaml 
# check onos log for apps to load.  onos; log:tail; apps -s -a

# base-kubernetes fails. chart bug. not included

# inject radius server config into onos
scripts/quick-onos-update.sh seba-node1 radius-netcfg.json


# Should now be ready to use abstract-olt or manual yaml to provision pod OLT, whitelist, and subscriber.  
# TODO: add abstract-olt commands instead

# Edit pod-olt.yaml, replace IP of your Edgecore OLT running bal and openolt
curl -H "xos-username: admin@opencord.org" -H "xos-password: letmein" -X POST --data-binary @provisioning-yaml/pod-olt.yaml http://seba-node1:30007/run
# Use vcli, verify olt is added and any onu go into omci-admin-lock state

# Modify whitelist for ONU plugged into proper ports.  Replace of:XXXX device id with parent_port_id from olt in vcli
curl -H "xos-username: admin@opencord.org" -H "xos-password: letmein" -X POST --data-binary @provisioning-yaml/whitelist.yaml http://seba-node1:30007/run
# Use vcli, devices, verify onu go into discovered state.  use onos cli, log:tail, verify RG are attempting to auth AND FAILING.

# Modify subscribers for ONU, nas-port-id, and vlans to be used by subscribers
curl -H "xos-username: admin@opencord.org" -H "xos-password: letmein" -X POST --data-binary @provisioning-yaml/subscribers.yaml http://seba-node1:30007/run
# Use onos cli, log:tail, verify RG are attempting to auth succeed.  
# Also verify kafka app picks it up and SUBSCRIBER_REGISTERED is shown.  In onos cli, run aaa-users, subscribers, and dhcpl2relay-associations 
# Use vcli, verify onu go into omci-flows-pushed state. 


# Done ONU/RG should be able to pass traffic.
